<script>
  import FormElement from "../form-element.ts";
  import {
    ShouldRender,
    RenderEvent,
    LoadedEvent,
    CreateRef,
  } from "../deps.ts";
  import c from "../classes.ts";
  import slotted from "../toggleable-slot.ts";

  export const name = "f-textarea";
  export const props = [
    "default",
    "disabled",
    "name",
    "type",
    "required",
    "validate",
  ];
  export const base = FormElement;
  export const form = true;
  export const aria = { Role: "input" };

  const slot = slotted();
  const textarea = CreateRef();

  self.addEventListener("focus", () => {
    textarea.current.focus();
  });

  function update_value() {
    self.value = textarea.current.innerText.replace(/\n\n/gm, "\n");
  }
</script>
<style>
  @require ../theme.ts as theme;
  @require ../spec.ts as spec;
  @insert ../styles/input.pss;

  .textarea-label {
    display: block;
    theme.padding("small_block");
    theme.colour("body");
    theme.text("body", "no-margin");
    theme.border("body", "contrast", "bottom");
    border-top-left-radius: ":spec.borders.body.radius";
    border-top-right-radius: ":spec.borders.body.radius";
  }

  .textarea-content {
    min-height: 6rem;
    theme.text("body", "no-margin");
    theme.padding("small_block");
    white-space: pre;
  }

  .textarea-content:focus {
    outline: none;
  }

  span:not(.caret) {
    animation-play-state: paused;
  }
</style>

<div class=":self.label_class">
  <div class="textarea-label">
    <slot></slot>
  </div>
  <div
    class="textarea-content"
    contenteditable="true"
    s:ref="textarea"
    on:blur="update_value"
  >
    <s:text use=":self.value ?? ''"></s:text>
  </div>
</div>
<s:if check=":self.should_show_validation">
  <s:if check=":self.is_bad_empty">
    <div class="error-text">
      <slot name="empty"></slot>
    </div>
  </s:if>
  <s:if check=":!self.is_bad_empty && self.is_invalid">
    <div class="error-text">
      <slot name="invalid"></slot>
    </div>
  </s:if>
</s:if>
<s:if check=":!self.should_show_validation">
  <div class=":c('help-text', ['empty', !slot.has_children])">
    <slot name="help" on:slotchange="slot.on_change"></slot>
  </div>
</s:if>
