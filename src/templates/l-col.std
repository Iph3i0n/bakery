<s:meta name="l-col">
  A column within a grid. They can wrap on to new lines without upsetting the
  flow.
  <attr name="xs">The size of the column on the smallest screen size.</attr>
  <attr name="sm" optional>The size of the column on small screens.</attr>
  <attr name="md" optional>The size of the column on medium screens.</attr>
  <attr name="lg" optional>The size of the column on large screens.</attr>
  <attr name="xl" optional>The size of the column on extra large screens.</attr>

  <aria role="gridcell" />
  <base use="BakeryBase" from="../base-classes/main.ts" default />
  <import use="screen_sizes" from="../spec.ts" />
</s:meta>

<script>
  const breaks = self.use_breakpoints(
    [
      self.xl
        ? { name: "xl", width: screen_sizes.xl.width, unit: "px" }
        : undefined,
      self.lg
        ? { name: "lg", width: screen_sizes.lg.width, unit: "px" }
        : undefined,
      self.md
        ? { name: "md", width: screen_sizes.md.width, unit: "px" }
        : undefined,
      self.sm
        ? { name: "sm", width: screen_sizes.sm.width, unit: "px" }
        : undefined,
      self.xs ? { name: "xs", width: 0, unit: "px" } : undefined,
    ],
    self.parentElement
  );
</script>

<style>
  @js const theme = require("../theme.ts");
  @js const spec = require("../spec.ts");

  :host {
    display: block;
  }

  :host {
    grid-column: ":`auto / span ${self[breaks.match]}`";
  }
</style>

<slot></slot>
