<script>
  export const name = "t-breadcrumbs";
  export const props = {
    divider: "/",
  };

  let options = [];

  function on_options(e) {
    const nodes = e.currentTarget.assignedElements();
    options = [];
    for (const node of nodes)
      if (node.tagName === "SPAN") options.push({ text: node.innerText });
      else if (node.tagName === "A")
        options.push({ text: node.innerText, href: node.getAttribute("href") });
      else
        throw new Error("Only spans or anchors can be children of breadcrumbs");
  }
</script>
<style>
  @js const theme = require("../theme.ts");
  @js const spec = require("../spec.ts");

  :host {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: flex-start;
  }

  .option {
    theme.text("body");
  }

  a.option {
    theme.textcolour("primary");
    text-decoration: none;
    transform: scale(1);
    theme.transition("fast", "transform");
  }

  a.option:hover,
  a.option:focus {
    transform: scale(1.1);
  }

  .divider {
    theme.text("body");
    theme.padding("small_block");
  }
</style>

<div style="display: none">
  <slot on:slotchange="on_options"></slot>
</div>

<s:for subject=":options.map((o, i) => [o, i])" key="[option, index]">
  <s:if check=":'href' in option">
    <a class="option" href=":option.href">
      <s:text use=":option.text"></s:text>
    </a>
  </s:if>
  <s:if check=":!('href' in option)">
    <span class="option"><s:text use=":option.text"></s:text></span>
  </s:if>
  <s:if check=":index !== options.length - 1">
    <span class="divider">
      <s:text use=":self.props.divider"></s:text>
    </span>
  </s:if>
</s:for>
