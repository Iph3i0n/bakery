<script>
  import { Receiver, Provider } from "../data.ts";

  export const name = "u-each";
  export const props = {
    subject: undefined,
    key: undefined,
  };

  self.style.display = "none";
  const id = "c" + crypto.randomUUID();

  const receiver = new Receiver(self, self.props.subject);
  let subject;

  function insertAfter(newNode, existingNode) {
    existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);
  }

  setTimeout(() => {
    subject = self.nextElementSibling.cloneNode(true);
    subject.setAttribute("data-each-id", id);
    self.nextElementSibling.remove();
    self.dispatchEvent(new ShouldRender());
  });

  self.addEventListener(RenderEvent.Key, () => {
    if (!subject || !Array.isArray(receiver.data)) return;
    for (const ele of self.parentElement.querySelectorAll(
      `[data-each-id="${id}"]`
    ))
      ele.remove();

    let previous = self;
    for (const item of receiver.data) {
      const input = subject.cloneNode(true);
      insertAfter(input, previous);
      previous = input;
      const provider = new Provider(input, self.props.key);
      provider.data = item;
    }
  });
</script>
