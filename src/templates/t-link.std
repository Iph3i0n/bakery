<meta name="t-link">
  A styled link for usage around the site.
  <attr name="href">
    The URL to send the user to if the button is being used as a link.
  </attr>
  <attr name="target" type="target">
    The standard target from an anchor element.
  </attr>
  <attr name="private" type="boolean">
    If set then the link will be treated as external.
    This means that `rel="noreferrer noopener"`
    will be applied.
  </attr>
  <attr name="block" type="boolean">
    If set then the link will be displayed as a block rather
    than an inline block.
  </attr>
  <attr name="spa" type="boolean">
    If set then the link will use a SPA push to navigate rather
    than loading the page. Will be ignored if `target` or
    `private` are set.
  </attr>
  <attr name="replace" type="boolean">
    Only used if `spa` is set. Will make the link replace the state
    rather than push. Useful if you don't want the back button to
    keep people on the page.
  </attr>
  <aria role="button" />
  <base use="Router" from="../router.ts" default />
</meta>

<script>
  self.tabIndex = 0;

  self.addEventListener("loaded", () => {
    self.addEventListener("click", () => {
      if (self.props.target)
        window.open(
          self.props.href,
          self.props.target,
          self.props.private ? "noreferrer" : undefined
        );
      else if (self.props.spa)
        if (self.props.replace) self.Replace(self.props.href);
        else self.Push(self.props.href);
      else window.location.href = self.props.href;
    });
  });
</script>

<style>
  @js const theme = require("../theme.ts");

  :host {
    display: ":self.props.block ? 'block' : 'inline-block'";
    theme.text("body", self.props.block ? undefined : "no-margin");
    cursor: pointer;
    theme.border("body", "contrast", "bottom");
    theme.transition("fast", "color", "background-color");
  }

  @if self.props.block {
    :host {
      theme.padding("small_block");
    }
  }

  :host(:hover),
  :host(:focus) {
    outline: none;
    theme.colour("primary", 1, 0.5);
  }
</style>

<slot></slot>
